type Forum @entity {
  id: ID!
  title: String!
  categories: [Category!]! @derivedFrom(field: "forum")
  threads: [Thread!]! @derivedFrom(field: "forum")
  admin_roles: [AdminRole!]! @derivedFrom(field: "forum")
  deleted: Boolean!
  createdAt: BigInt!
  lastEditedAt: BigInt
  deletedAt: BigInt
}

type Category @entity {
  id: ID!
  title: String!
  description: String!
  forum: Forum!
  threads: [Thread!]! @derivedFrom(field: "category")
  deleted: Boolean!
  createdAt: BigInt!
  lastEditedAt: BigInt
  deletedAt: BigInt
}

type Thread @entity {
  id: ID!
  author: User!
  title: String!
  forum: Forum!
  category: Category
  posts: [Post!]! @derivedFrom(field: "thread")
  deleted: Boolean!
  createdAt: BigInt!
  deletedAt: BigInt
}

type Post @entity {
  id: ID!
  author: User!
  content: String!
  reply_to_post: Post
  thread: Thread!
  deleted: Boolean!
  createdAt: BigInt!
  lastEditedAt: BigInt
  deletedAt: BigInt
}

type User @entity {
  id: ID!
  admin_roles: [AdminRole!]! @derivedFrom(field: "user")
  threads: [Thread!]! @derivedFrom(field: "author")
  posts: [Post!]! @derivedFrom(field: "author")
  createdAt: BigInt!
}

type AdminRole @entity {
  id: ID!
  user: User!
  forum: Forum!
  deleted: Boolean!
  createdAt: BigInt!
  deletedAt: BigInt
}

type _Schema_ @fulltext(
  name: "postSearch"
  language: en
  algorithm: proximityRank
  include: [{
    entity: "Post",
    fields: [{ name: "content" }]
  }]
)